EXERCISE 1.2

b.)

?- loves(peter,susi).
true.

?- loves(susi,felix).
true.

?- loves(sabine,X).
X = peter.

?- loves(X,sabine).
X = hans.

?- loves(X,Y), loves(Y,X).
X = peter,
Y = susi ;
X = susi,
Y = peter ;
X = Y, Y = felix.

?- loves(X,Y), hates(Y,X).
X = hans,
Y = sabine ;
false.


c.)

?- trace.
true.

[trace]  ?- loves(peter,susi).
   Call: (8) loves(peter, susi) ? creep
   Exit: (8) loves(peter, susi) ? creep
true .

[trace]  ?- loves(susi,felix).
   Call: (8) loves(susi, felix) ? creep
   Exit: (8) loves(susi, felix) ? creep
true 

[trace]  ?- loves(sabine,X).
   Call: (8) loves(sabine, _4056) ? creep
   Exit: (8) loves(sabine, peter) ? creep
X = peter.

[trace]  ?- loves(X,sabine).
   Call: (8) loves(_4054, sabine) ? creep
   Exit: (8) loves(hans, sabine) ? creep
X = hans.

[trace]  ?- loves(X,Y), loves(Y,X).
   Call: (9) loves(_4056, _4058) ? creep
   Exit: (9) loves(peter, susi) ? creep
   Call: (9) loves(susi, peter) ? creep
   Exit: (9) loves(susi, peter) ? creep
X = peter,
Y = susi ;
   Redo: (9) loves(_4056, _4058) ? creep
   Exit: (9) loves(hans, susi) ? creep
   Call: (9) loves(susi, hans) ? creep
   Fail: (9) loves(susi, hans) ? creep
   Redo: (9) loves(_4056, _4058) ? creep
   Exit: (9) loves(hans, sabine) ? creep
   Call: (9) loves(sabine, hans) ? creep
   Fail: (9) loves(sabine, hans) ? creep
   Redo: (9) loves(_4056, _4058) ? creep
   Exit: (9) loves(sabine, peter) ? creep
   Call: (9) loves(peter, sabine) ? creep
   Fail: (9) loves(peter, sabine) ? creep
   Redo: (9) loves(_4056, _4058) ? creep
   Exit: (9) loves(susi, peter) ? creep
   Call: (9) loves(peter, susi) ? creep
   Exit: (9) loves(peter, susi) ? creep
X = susi,
Y = peter ;
   Redo: (9) loves(peter, susi) ? creep
   Fail: (9) loves(peter, susi) ? creep
   Redo: (9) loves(_4056, _4058) ? creep
   Exit: (9) loves(susi, felix) ? creep
   Call: (9) loves(felix, susi) ? creep
   Fail: (9) loves(felix, susi) ? creep
   Redo: (9) loves(_4056, _4058) ? creep
   Exit: (9) loves(felix, felix) ? creep
   Call: (9) loves(felix, felix) ? creep
   Exit: (9) loves(felix, felix) ? creep
X = Y, Y = felix.

[trace]  ?- loves(X,Y), hates(Y,X).
   Call: (9) loves(_4056, _4058) ? creep
   Exit: (9) loves(peter, susi) ? creep
   Call: (9) hates(susi, peter) ? creep
   Fail: (9) hates(susi, peter) ? creep
   Redo: (9) loves(_4056, _4058) ? creep
   Exit: (9) loves(hans, susi) ? creep
   Call: (9) hates(susi, hans) ? creep
   Fail: (9) hates(susi, hans) ? creep
   Redo: (9) loves(_4056, _4058) ? creep
   Exit: (9) loves(hans, sabine) ? creep
   Call: (9) hates(sabine, hans) ? creep
   Exit: (9) hates(sabine, hans) ? creep
X = hans,
Y = sabine .


EXCERCISE 1.3

?- X=X.
true.

?- Y=Y.
true.

?- mia=mia.
true.

?- X=mia , X= vincent.
false.


EXCERCISE 1.4

?- right_of(melanie,X).
X = markus.

?- right_of(X,maren).
X = markus.

?- right_of(X,monika).
X = martin.

?- right_of(monika,X).
X = manuel.


?- opposite(monika,X).
X = markus.

TODO: how to make it aribitrary size.








